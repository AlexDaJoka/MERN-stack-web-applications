{"ast":null,"code":"var _jsxFileName = \"/Users/myfolder/Desktop/All MERN/Devlgnis/client/src/components/Login2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { AuthContext } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login2() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    updateUser\n  } = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      dispatch(signInStart());\n      const res = await axios.post(\"http://localhost:8000/auth/login\", {\n        email,\n        password\n      });\n      const data = await res.json();\n      if (data.success == false) {\n        dispatch(signInFailure(data.message));\n        return;\n      }\n      dispatch(signInSuccess(data));\n      navigate('/');\n    } catch (error) {\n      dispatch(signInFailure(error.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      type: \"text\",\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(Link, {\n        to: '/register',\n        children: \"register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Login2, \"PpiN89FG9Kc9wGvKEZwvREDBg2E=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Login2;\nexport default Login2;\nvar _c;\n$RefreshReg$(_c, \"Login2\");","map":{"version":3,"names":["React","useContext","useState","Link","useNavigate","useDispatch","useSelector","axios","AuthContext","jsxDEV","_jsxDEV","Login2","_s","navigate","updateUser","dispatch","handleLogin","e","preventDefault","signInStart","res","post","email","password","data","json","success","signInFailure","message","signInSuccess","error","onSubmit","children","name","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/myfolder/Desktop/All MERN/Devlgnis/client/src/components/Login2.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux';\nimport axios from 'axios';\nimport {AuthContext} from './AuthContext'\n\n\nfunction Login2() {\n\nconst navigate = useNavigate();\nconst {updateUser} = useContext(AuthContext);\nconst dispatch = useDispatch();\n\nconst handleLogin = async (e) => {\n  e.preventDefault();\n  try{\n    dispatch(signInStart());\n    const res = await axios.post(\"http://localhost:8000/auth/login\",{\n      email,\n      password\n    });\n    const data = await res.json();\n    if (data.success == false){\n      dispatch(signInFailure(data.message));\n      return;\n    }\n    dispatch(signInSuccess(data));\n    navigate('/');\n  }catch(error){\n  dispatch(signInFailure(error.message));\n  }\n\n}\n\n\n\n  return (\n    <form onSubmit={handleLogin}>\n      <input name='email' type='email' placeholder='email'/>\n      <input name='password' type='text' placeholder='password'/>\n      <button>Login</button>\n      <p>Нет аккаунта<Link to={'/register'}>register</Link></p>\n    </form>\n  )\n}\n\nexport default Login2"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAACU;EAAU,CAAC,GAAGb,UAAU,CAACO,WAAW,CAAC;EAC5C,MAAMO,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAG;MACDH,QAAQ,CAACI,WAAW,CAAC,CAAC,CAAC;MACvB,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,kCAAkC,EAAC;QAC9DC,KAAK;QACLC;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC7B,IAAID,IAAI,CAACE,OAAO,IAAI,KAAK,EAAC;QACxBX,QAAQ,CAACY,aAAa,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC;QACrC;MACF;MACAb,QAAQ,CAACc,aAAa,CAACL,IAAI,CAAC,CAAC;MAC7BX,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,QAAMiB,KAAK,EAAC;MACbf,QAAQ,CAACY,aAAa,CAACG,KAAK,CAACF,OAAO,CAAC,CAAC;IACtC;EAEF,CAAC;EAIC,oBACElB,OAAA;IAAMqB,QAAQ,EAAEf,WAAY;IAAAgB,QAAA,gBAC1BtB,OAAA;MAAOuB,IAAI,EAAC,OAAO;MAACC,IAAI,EAAC,OAAO;MAACC,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtD7B,OAAA;MAAOuB,IAAI,EAAC,UAAU;MAACC,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3D7B,OAAA;MAAAsB,QAAA,EAAQ;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtB7B,OAAA;MAAAsB,QAAA,GAAG,qEAAY,eAAAtB,OAAA,CAACP,IAAI;QAACqC,EAAE,EAAE,WAAY;QAAAR,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEX;AAAC3B,EAAA,CArCQD,MAAM;EAAA,QAEEP,WAAW,EAEXC,WAAW;AAAA;AAAAoC,EAAA,GAJnB9B,MAAM;AAuCf,eAAeA,MAAM;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}